//
//  PrefixHeader.pch
//  MercenaryStory
//
//  Created by Mac on 2021/6/16.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch



/// 引入的头文件
#import <UIViewExt/UIViewExt.h>
#import "WDCalculateTool.h"  /// 切割图片、算法等
#import "WDBaseNode.h"
#import "WDNotificationManager.h"
#import "WDTextureManager.h"


/// define
//屏宽高
#define kScreenWidth [UIScreen mainScreen].bounds.size.width
#define kScreenHeight [UIScreen mainScreen].bounds.size.height

#define IS_IPHONEX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? (CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1080, 2340), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1170, 2532), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1284, 2778), [[UIScreen mainScreen] currentMode].size)) : NO)

//零件
#define kBody @"body"  //身体
#define kHip @"hip"    //胯
#define kRightHand @"rightHand" //右手
#define kKnee @"knee"  //膝盖
#define kFoot @"foot"  //脚
#define kLeftArm @"leftArm" //左胳膊
#define kRightArm @"rightArm" //右胳膊
#define kLeftElbow @"kLeftElbow" //左胳膊肘
#define kRightElbow @"kRightElbow" //右胳膊肘加手掌
#define kLeftHand @"leftHand" //左手
#define kRightFinger @"rightFinger" //右手指

/// 脚和膝盖的移动动画
#define KAnimationFootMove @"KAnimationFootMove"

/// 上半身站立和移动动画
#define kAnimationUpBody @"kAnimationUpBody"


//弧度角度互换
//角度转弧度
#define DEGREES_TO_RADIANS(angle) ((angle) / 180.0 * M_PI)

//弧度转角度
#define RADIANS_TO_DEGREES(radians) ((radians) * (180.0 / M_PI))


// RGB颜色转换（16进制->10进制）
#define UICOLOR_HEX(hexString) [UIColor colorWithRed:((float)((hexString & 0xFF0000) >> 16))/255.0 green:((float)((hexString & 0xFF00) >> 8))/255.0 blue:((float)(hexString & 0xFF))/255.0 alpha:1.0]
// 带有RGBA的颜色设置
#define UICOLOR_RGB(R, G, B, A) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:A]
// 随机颜色
#define UICOLOR_RANDOM [UIColor colorWithRed:(arc4random()%255)/255.0 green:(arc4random()%255)/255.0 blue:(arc4random()%255)/255.0 alpha:1.0]


//骑士
#define kKinght @"Knight"
#define kKinght_skill_1 @"Knight_skill_1" //群嘲
#define kKinght_skill_2 @"Knight_skill_2" //减伤
#define kKinght_skill_3 @"Knight_skill_3" //冰巫师第3个技能，减伤
#define kKinght_skill_4 @"Knight_skill_4" //冰巫师第4个技能，薄葬
#define kKinght_skill_5 @"Knight_skill_5" //冰巫师第5个技能，复活

//牧师
#define kPriest @"Priest"
#define kPriest_skill_1 @"kPriest_skill_1" //群疗
#define kPriest_skill_2 @"kPriest_skill_2" //双倍治疗
#define kPriest_skill_3 @"kPriest_skill_3" //减伤
#define kPriest_skill_4 @"kPriest_skill_4" //薄葬
#define kPriest_skill_5 @"kPriest_skill_5" //复活

//弓箭手
#define kArcher @"Archer"
#define kArcher_skill_1 @"Archer_skill_1" //增加攻速时间
#define kArcher_skill_2 @"Archer_skill_2" //三连发
#define kArcher_skill_3 @"Archer_skill_3" //增加移动速度
#define kArcher_skill_4 @"Archer_skill_4" //攻击增加吸血
#define kArcher_skill_5 @"Archer_skill_5" //三倍攻击，继承每一根箭


//法师
#define kWizard @"Wizard"
#define kWizard_skill_1 @"Wizard_skill_1" //增加攻速时间
#define kWizard_skill_2 @"Wizard_skill_2" //三连发
#define kWizard_skill_3 @"Wizard_skill_3" //增加移动速度
#define kWizard_skill_4 @"Wizard_skill_4" //攻击增加吸血
#define kWizard_skill_5 @"Wizard_skill_5" //三倍攻击，继承每一根箭


#pragma mark - 敌人 -
/// 士兵1号 普通骷髅兵
#define kSolider1 @"Solider1"
/// 士兵2号 骷髅弓手
#define kSolider2 @"Solider2"



//NSLog
#ifndef __OPTIMIZE__
#define NSLog(...) NSLog(@"%s 第%d行 \n %@\n\n",__func__,__LINE__,[NSString stringWithFormat:__VA_ARGS__])
#else
#define NSLog(...) {}
#endif


#pragma mark 物理运算类别掩码
//body.categoryBitMask = 0;  <类别掩码，为0时代表我谁也碰撞不了>
//body.contactTestBitMask = 0; <碰撞检测掩码，为0时代表不触发检测>
//body.collisionBitMask = 0;  <允许碰撞掩码，为0时代表谁也碰撞不了我>
//想要发生碰撞，需要 categoryBitMask & collisionBitMask 运算，为非0，可以发生碰撞

static int spriteNumber = 0;

static const uint32_t PLAYER_CATEGORY  = 0x01;  //0001
static const uint32_t PLAYER_COLLISION = 0x02;  //0010
static const uint32_t PLAYER_CONTACT   = 0x15;  //1111

static const uint32_t LINE_CATEGORY  = 0x00;  //0000
static const uint32_t LINE_COLLISION = 0x00;  //0000
static const uint32_t LINE_CONTACT   = 0x00;  //0000


static const uint32_t MONSTER_CATEGORY  = 0x04;  //0100
static const uint32_t MONSTER_COLLISION = 0x08;  //1000
static const uint32_t MONSTER_CONTACT   = 0x04;  //0100



static const uint32_t ARROW_CATEGORY       = 0X04;     //0100
static const uint32_t ARROW_CATEGORY_ENEMY = 0x01;     //1000





#pragma mark - 通知 -

///增加仇恨通知
#define kNotificationForAddHateNumber @"kNotificationForAddHateNumber"
///实时调用更新的通知
#define kNotificationForUpData @"kNotificationForUpData"
///死亡通知
#define kNotificationForDead @"kNotificationForDead"


/// 换人通知
#define kNotificationForChangeUser @"kNotificationForChangeUser"
/// 基本只有教学关卡有用
#define kNotificationForSkillCanUse @"kNotificationForSkillCanUse"
/// 介绍技能通知
#define kNotificationForShowSkill @"kNotificationForShowSkill"
/// 隐藏或显示技能栏
#define kNotificationForHiddenSkill @"kNotificationForHiddenSkill"



#endif /* PrefixHeader_pch */
